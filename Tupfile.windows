# vim: set ts=8 sw=8 sts=8 noet tw=78 ft=tup:

ifeq (@(TUP_MSVC),y)
	dllflags = ws2_32.lib psapi.lib user32.lib /OUT:tup-dllinject.dll $(SHARED)
	dllout = tup-dllinject.dll tup-dllinject.lib tup-dllinject.exp
	: src/ldpreload/*.o |> ^ LINK tup-dllinject.dll^ $(LD) %f $(LDFLAGS) $(dllflags) |> $(dllout)
else
	LDFLAGS_tup-dllinject.dll += -lws2_32 -lpsapi -luser32 $(SHARED)
	: src/ldpreload/*.o |> !ld |> tup-dllinject.dll
endif

ifeq (@(TUP_PLATFORM),windows)
	: |> echo const char* tup_version(void) {return "bootstrap";} > %o |> version.c
else
	: |> echo "const char* tup_version(void) {return \"`git describe`\";}" > %o |> version.c
endif

: version.c |> !cc |> version.o

objs += src/tup/*.o
objs += src/tup/tup/*.o
objs += src/tup/monitor/*.o
objs += src/tup/colors/*.o
objs += src/linux/*.o
objs += src/sqlite3/*.o
objs += src/compat/*.o
objs += version.o

ifeq (@(TUP_MSVC),y)
	LDFLAGS_tup.exe += ws2_32.lib
	linklib = tup-dllinject.lib
else
	LDFLAGS_tup.exe += -lws2_32
	linklib = tup-dllinject.dll
endif

: $(objs) $(linklib) |> !ld |> tup.exe
: src/cp/*.o |> !ld |> cp.exe

